/*
Author: Tomas Rohr, rohr.tomas@gmail.com
Last change date: 2017-09-05
*/
SET VERIFY OFF

COLUMN FLAG FORMAT A5
COLUMN A_PK FORMAT 99 HEADING "PK"
COLUMN B_PK FORMAT 99 HEADING "PK"
COLUMN A_COLUMN FORMAT A30
COLUMN B_COLUMN FORMAT A30
COLUMN A_DATATYPE FORMAT A20
COLUMN B_DATATYPE FORMAT A20
COLUMN A_NULLABLE FORMAT A1 HEADING "N"
COLUMN B_NULLABLE FORMAT A1 HEADING "N"
COLUMN A_VIRTUAL FORMAT A1 HEADING "V"
COLUMN B_VIRTUAL FORMAT A1 HEADING "V"
COLUMN A_HIDDEN FORMAT A1 HEADING "H"
COLUMN B_HIDDEN FORMAT A1 HEADING "H"
COLUMN A_ID FORMAT 999
COLUMN B_ID FORMAT 999

WITH W_COLUMNS AS (
  SELECT 
    ACC_POSITION AS A_PK,
    A.COLUMN_NAME AS A_COLUMN,
    A.DATA_TYPE ||
    CASE WHEN A.DATA_TYPE LIKE '%CHAR%' 
        THEN '(' || A.DATA_LENGTH ||
          CASE WHEN A.CHAR_USED = 'C' THEN ' CHAR)' ELSE ' BYTE)' END
    WHEN A.DATA_TYPE IN 'NUMBER'
        THEN CASE WHEN A.DATA_PRECISION IS NOT NULL AND A.DATA_SCALE IS NOT NULL
                  THEN '('|| A.DATA_PRECISION ||','|| A.DATA_SCALE ||')'
             END
    END AS A_DATATYPE,  
    A.NULLABLE AS A_NULLABLE,
	 SUBSTR(A.VIRTUAL_COLUMN,1,1) AS A_VIRTUAL,
	 SUBSTR(A.HIDDEN_COLUMN,1,1) AS A_HIDDEN,
    BCC_POSITION AS B_PK,
    A.COLUMN_ID AS A_COL_ID,
    B.COLUMN_NAME AS B_COLUMN,
    B.DATA_TYPE ||
    CASE WHEN B.DATA_TYPE LIKE '%CHAR%' 
        THEN '(' || B.DATA_LENGTH ||
          CASE WHEN B.CHAR_USED = 'C' THEN ' CHAR)' ELSE ' BYTE)' END
      WHEN B.DATA_TYPE IN 'NUMBER'
        THEN CASE WHEN B.DATA_PRECISION IS NOT NULL AND B.DATA_SCALE IS NOT NULL
                  THEN '('|| B.DATA_PRECISION ||','|| B.DATA_SCALE ||')'
             END
    END AS B_DATATYPE,
    B.NULLABLE AS B_NULLABLE,
    SUBSTR(B.VIRTUAL_COLUMN,1,1) AS B_VIRTUAL,
    SUBSTR(B.HIDDEN_COLUMN,1,1) AS B_HIDDEN
  FROM 
    (
    SELECT
      ACC.POSITION AS ACC_POSITION,
      AI.COLUMN_ID,
      AI.OWNER,
      AI.TABLE_NAME,
      AI.COLUMN_NAME,
      AI.DATA_TYPE,
      AI.DATA_LENGTH,
      AI.CHAR_USED,
      AI.DATA_PRECISION,
      AI.DATA_SCALE,
      AI.NULLABLE,
      AI.VIRTUAL_COLUMN,
      AI.HIDDEN_COLUMN
    FROM
    ALL_TAB_COLS AI
    LEFT OUTER JOIN ALL_CONSTRAINTS AC
       ON AC.OWNER = AI.OWNER
      AND AC.TABLE_NAME = AI.TABLE_NAME
      AND AC.CONSTRAINT_TYPE = 'P'
    LEFT OUTER JOIN ALL_CONS_COLUMNS ACC
       ON ACC.OWNER = AC.OWNER
      AND ACC.TABLE_NAME = AC.TABLE_NAME
      AND ACC.COLUMN_NAME = AI.COLUMN_NAME
      AND ACC.CONSTRAINT_NAME = AC.CONSTRAINT_NAME
    WHERE AI.OWNER = '&1'
      AND AI.TABLE_NAME = '&2'
    ) A
    FULL OUTER JOIN (
    SELECT
      BCC.POSITION AS BCC_POSITION,
      BI.COLUMN_ID,
      BI.OWNER,
      BI.TABLE_NAME,
      BI.COLUMN_NAME,
      BI.DATA_TYPE,
      BI.DATA_LENGTH,
      BI.CHAR_USED,
      BI.DATA_PRECISION,
      BI.DATA_SCALE,
      BI.NULLABLE,
      BI.VIRTUAL_COLUMN,
      BI.HIDDEN_COLUMN
    FROM
      ALL_TAB_COLS BI
      LEFT OUTER JOIN ALL_CONSTRAINTS BC
        ON BI.OWNER = BC.OWNER
          AND BI.TABLE_NAME = BC.TABLE_NAME
          AND BC.CONSTRAINT_TYPE = 'P'
      LEFT OUTER JOIN ALL_CONS_COLUMNS BCC
        ON BCC.OWNER = BC.OWNER
          AND BCC.TABLE_NAME = BC.TABLE_NAME
          AND BCC.COLUMN_NAME = BI.COLUMN_NAME
          AND BCC.CONSTRAINT_NAME = BC.CONSTRAINT_NAME
      WHERE BI.OWNER = '&3'
      AND BI.TABLE_NAME = '&4'
    ) B     
      ON A.COLUMN_NAME = B.COLUMN_NAME
)
SELECT 
  CASE 
    WHEN A_COLUMN IS NULL AND B_COLUMN IS NOT NULL THEN '>'
    WHEN A_COLUMN IS NOT NULL AND B_COLUMN IS NULL THEN '<'
    WHEN A_DATATYPE <> B_DATATYPE THEN 'D'
  END ||
  CASE WHEN A_NULLABLE <> B_NULLABLE THEN 'N' END ||
  CASE WHEN NVL(A_PK,0) <> NVL(B_PK,0) THEN 'P' END ||
  CASE WHEN A_VIRTUAL <> B_VIRTUAL THEN 'V' END ||
  CASE WHEN A_HIDDEN <> B_HIDDEN THEN 'H' END AS FLAG,
  A_PK,
  A_COLUMN,
  A_DATATYPE,
  A_NULLABLE,
  A_VIRTUAL,
  B_PK,
  B_COLUMN,
  B_DATATYPE,
  B_NULLABLE,
  B_VIRTUAL
FROM W_COLUMNS
ORDER BY A_COL_ID;





